generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int        @default(autoincrement())
  uuid            String     @id @unique @default(uuid()) @db.Uuid
  username        String     @unique
  email           String     @unique
  referralCode    String
  referredBy      String?
  token           Json?      @default("[]")
  bcWallet        BigInt?
  comissionWallet Float?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @default(now())
  otp             Int?
  Referral        Referral[]
  ParentReferral  Referral[] @relation("UserParent")
}

model Admin {
  uuid       String           @id @default(uuid())
  username   String           @unique
  email      String           @unique
  password   String
  isSuper    Boolean          @default(false)
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
  status     Boolean          @default(true)
  token      String?
  otp        Int?
  privileges AdminPrivilege[]
}

model PrivilegeMaster {
  uuid           String           @id @default(uuid())
  name           String
  description    String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  AdminPrivilege AdminPrivilege[]
}

model AdminPrivilege {
  uuid                String          @id @default(uuid())
  adminUuid           String
  privilegeMasterUuid String
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  status              Boolean
  admin               Admin           @relation(fields: [adminUuid], references: [uuid])
  privilegeMaster     PrivilegeMaster @relation(fields: [privilegeMasterUuid], references: [uuid])
}

model Referral {
  uuid     String  @id @default(uuid()) @db.Uuid
  parentId String? @db.Uuid
  userId   String  @db.Uuid
  user     User    @relation(fields: [userId], references: [uuid])
  parent   User?   @relation("UserParent", fields: [parentId], references: [uuid])
}
